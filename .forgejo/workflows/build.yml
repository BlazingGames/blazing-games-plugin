name: Build, Test and Publish
on: 
  push:
    branches:
      - main
jobs:
  test:
    runs-on: docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Setup Gradle
        uses: actions/gradle/setup-gradle@v4
        with:
          gradle-version: '8.11'
      
      - name: Setup Paper
        run: |
          mkdir testsrv
          curl -o testsrv/server.jar https://api.papermc.io/v2/projects/paper/versions/1.21/builds/130/downloads/paper-1.21-130.jar
          echo "eula=true" > testsrv/eula.txt

      - name: Build test jar with Gradle
        run: gradle -Pversion=test-${{ github.run_number }} -Ptest=true build

      - name: Install plugin
        run: |
          mkdir testsrv/plugins
          cp build/libs/blazinggames-test-${{ github.run_number }}.jar testsrv/plugins/blazinggames.jar

      - name: Run unit tests
        timeout-minutes: 30
        run: |
          cd testsrv && java -Xms2048M -Xmx2048M -jar server.jar nogui --nogui
      
      - name: Ensure tests passed
        run: |
          if [ "$(cat testsrv/TESTS_RESULT)" = "true" ]; then exit 0; else exit 1; fi
  build-and-publish:
    runs-on: docker
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Setup Gradle
        uses: actions/gradle/setup-gradle@v4
        with:
          gradle-version: '8.11'

      - name: Build with Gradle
        run: gradle -Pversion=${{ github.run_number }} build

      - name: Create Release
        uses: "actions/gitea-release-action@v1"
        with:
          name: Build v${{ github.run_number }}
          prerelease: false
          tag_name: "v${{ github.run_number }}"
          files: |-
            build/libs/blazinggames-${{ github.run_number }}.jar
      
      - name: Upload Plugin to Pterodactyl
        uses: "actions/pterodactyl-upload-action@v2.4"
        with:
          panel-host: ${{ secrets.PANEL_HOST }}
          api-key: ${{ secrets.PANEL_API_KEY }}
          server-id: ${{ secrets.PANEL_SERVER_ID }}
          source: build/libs/blazinggames-${{ github.run_number }}.jar
          target: "./plugins/blazinggames-latest-ci-cd.jar"
          restart: true

      - name: Send Discord Notification
        uses: actions/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          content: "Build v${{ github.run_number }} sucessful"
          embed-title: "Build v${{ github.run_number }} sucessful"
          embed-description: "${{ github.event.head_commit.message }}"
          embed-footer-text: "Pushed by ${{ github.event.pusher.username || 'missing username' }} <${{ github.event.pusher.email || 'missing email' }}>"
          embed-color: 5560444 #54D87C
